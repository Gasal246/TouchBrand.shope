<%-include('chead.ejs')%>
<!-- ADD PRODUCT FORM... -->
<div class="main-panel">
    <div class="formDiv content-wrapper">
        <div class="row">
            <div class="col-12 mt-4 mb-3" style="display: flex; justify-content: space-between;">
                <h5><a href="/admin/products" style="text-decoration: none;"><i
                            class="fa-solid fa-angle-left"></i> Back to Products</a></h5>
                </h5>
            </div>
        </div>
        <h6 class="text-center">Add a new product</h6>
        <form action="/admin/addproduct" method="post" enctype="multipart/form-data">
            <div class="mb-3">
                <label class="form-label">Product Name</label>
                <input type="text" class="form-control" name="pname" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Category</label>
                <select name="category" id="category" class="form-control" required>
                    <option value="">Select any categories</option>
                    <% categories.map((category)=>{ %>
                        <option value="<%= category.Catname %>"><%= category.Catname %></option>
                    <% }) %>
                </select>
            </div>
            <div class="mb-3">
                <label class="form-label">Sub Categories</label>
                <input name="subcategory" id="subcategory" class="form-control" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Specs</label>
                <input type="text" class="form-control" name="specs" required>
            </div>
            <div class="form-floating mb-3">
                <textarea class="form-control" name="desc" placeholder="Leave a comment here"
                    id="floatingTextarea" required></textarea>
                <label for="floatingTextarea">Description</label>
            </div>
            <div class="mb-3">
                <label class="form-label">Price</label>
                <input type="number" name="price" class="form-control" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Shipping cost</label>
                <input type="number" name="scost" class="form-control" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Discount amount</label>
                <input type="number" name="discount" class="form-control" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Total stock</label>
                <input type="number" name="stoke" class="form-control" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Select the images</label>
                <input type="file" class="form-control imageInput" id="fileUpload" name="images" required
                    multiple>
            </div>
            <div id="imagePreview"></div>
            <h6 class="errorDisplayer"></h6>
            <button type="submit" class="btn btn-primary">Add product</button>
        </form>
    </div>
</div>
<script>
    const fileInput = document.getElementById('fileUpload');
    const imagePreview = document.getElementById('imagePreview');
    let selectedFiles = [];

    fileInput.addEventListener('change', () => {
        imagePreview.innerHTML = '';
        const files = fileInput.files;

        for (let i = 0; i < files.length; i++) {
            const file = files[i];
            if (file.type.startsWith('image/')) {
                const img = document.createElement('img');
                img.className = 'preview-image';
                img.src = URL.createObjectURL(file);
                img.setAttribute('data-index', i);

                img.addEventListener('click', (event) => {
                    const index = parseInt(event.target.getAttribute('data-index'));
                    selectedFiles = selectedFiles.filter((_, idx) => idx !== index);
                    updateFileInput(selectedFiles);
                    img.remove();
                });

                img.addEventListener('mouseover', () => {
                    img.style.opacity = '0.5';
                });

                img.addEventListener('mouseout', () => {
                    img.style.opacity = '1';
                });

                imagePreview.appendChild(img);
                selectedFiles.push(file);
            }
        }
        updateFileInput(selectedFiles);
    });

    function updateFileInput(updatedFiles) {
        const updatedFileList = new DataTransfer();
        for (let i = 0; i < updatedFiles.length; i++) {
            updatedFileList.items.add(updatedFiles[i]);
        }
        fileInput.files = updatedFileList.files;
    }

</script>
<%-include('cfoot.ejs')%>